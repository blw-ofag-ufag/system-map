@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema: <http://schema.org/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix systemmap: <https://agriculture.ld.admin.ch/system-map/> .
@prefix termdat: <https://register.ld.admin.ch/termdat/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix : <https://agriculture.ld.admin.ch/system-map/shapes/> .

# ------------------------------------------------------------------------------
# 1.1. Multilingual Labels for Key Entities
#    - For every instance of:
#      schema:Organization, schema:SoftwareApplication, dcat:Dataset
#      => Must have at least one rdfs:label @de
# ------------------------------------------------------------------------------

:MultilingualLabelShape
    a sh:NodeShape ;
    sh:targetClass schema:Organization,
        schema:Legislation,
        schema:SoftwareApplication,
        dcat:Dataset ;

    # Must have at least one label in German
    sh:property [
        sh:path rdfs:label ;

        # We use a qualifiedValueShape to say: among all rdfs:label values,
        # at least one must match "languageIn ('de')".
        sh:qualifiedValueShape [
            sh:datatype rdf:langString ;
            sh:languageIn ("de") ;
        ] ;
        sh:qualifiedMinCount 1 ;

        sh:message "A label in German is required (rdfs:label @de)."
    ] .

# ------------------------------------------------------------------------------
# 1.2. Multilingual Comments for IT Systems
#    - Every instance of schema:SoftwareApplication => Must have
#      at least one rdfs:comment @de
# ------------------------------------------------------------------------------

:SoftwareApplicationMultilingualCommentShape
    a sh:NodeShape ;
    sh:targetClass schema:SoftwareApplication ;

    # Must have at least one comment in German
    sh:property [
        sh:path rdfs:comment ;
        sh:qualifiedValueShape [
            sh:datatype rdf:langString ;
            sh:languageIn ("de") ;
        ] ;
        sh:qualifiedMinCount 1 ;
        sh:message "A comment in German is required (rdfs:comment @de)."
    ] .

# ------------------------------------------------------------------------------
# 1.3. Operating Organization for IT Systems
#    - Every instance of schema:SoftwareApplication => Must have
#      systemmap:operatedBy => at least one schema:Organization
#      (either directly or indirectly via the thing it is part of)
# ------------------------------------------------------------------------------

:SoftwareApplicationOperatingOrgShape
    a sh:NodeShape ;
    sh:targetClass schema:SoftwareApplication ;
    sh:property [
        # follow zero-or-more dcterms:isPartOf links, then systemmap:operatedBy
        sh:path (
            [ sh:zeroOrMorePath dcterms:isPartOf ]
            systemmap:operatedBy
        ) ;
        sh:minCount 1 ;
        sh:message "Every software application must be operated by at least one organization -- either directly (systemmap:operatedBy on itself) or via the system it is part of." ;
    ] .

# ------------------------------------------------------------------------------
# 1.4. Containment of Information within IT Systems
#    - Every instance of dcat:Dataset => Must be linked
#      via systemmap:containedIn => schema:SoftwareApplication,
#      either directly or via a parent dataset in its dcterms:isPartOf chain.
# ------------------------------------------------------------------------------

:InformationContainedInITSystemShape
    a sh:NodeShape ;
    sh:targetClass dcat:Dataset ;
    sh:property [
        # follow zero-or-more dcterms:isPartOf links, then systemmap:containedIn
        sh:path (
            [ sh:zeroOrMorePath dcterms:isPartOf ]
            systemmap:containedIn
        ) ;
        sh:class schema:SoftwareApplication ;
        sh:minCount 1 ;
        sh:message """
Every piece of information (dcat:Dataset) must be contained in at least one IT systemâ€”
either directly (systemmap:containedIn on itself) or via a dataset it is part of.
""" ;
    ] .

# ------------------------------------------------------------------------------
# 1.5. Unique Language Constraint for rdfs:label and rdfs:comment
#    - Every node can have at most one rdfs:label per language and at most one
#      rdfs:comment per language.
# ------------------------------------------------------------------------------

:UniqueLangLabelShape
    a sh:NodeShape ;
    sh:targetSubjectsOf rdfs:label ;
    sh:property [
        sh:path rdfs:label ;
        sh:uniqueLang true ;
        sh:message "Each node must have at most one rdfs:label per language."
    ] .

:UniqueLangCommentShape
    a sh:NodeShape ;
    sh:targetSubjectsOf rdfs:comment ;
    sh:property [
        sh:path rdfs:comment ;
        sh:uniqueLang true ;
        sh:message "Each node must have at most one rdfs:comment per language."
    ] .



################################################################################
#                          Range and Domain checks                             #
################################################################################

# ------------------------------------------------------------------------------
# 2.1. Domain and Range check for schema:member
#    - Both the domain and range of the property schema:member must equal to
#      schema:Organization
# ------------------------------------------------------------------------------

systemmap:MemberDomainShape
    a sh:NodeShape ;
    sh:targetSubjectsOf schema:member ;
    sh:class schema:Organization ;
    sh:message "The subject of schema:member must be a schema:Organization" .

systemmap:MemberRangeShape
    a sh:NodeShape ;
    sh:targetObjectsOf schema:member ;
    sh:class schema:Organization ;
    sh:message "The object of schema:member must be a schema:Organization" .

# ------------------------------------------------------------------------------
# 2.2. Domain and Range check for schema:memberOf
#    - Both the domain and range of the property schema:memberOf must equal to
#      schema:Organization
# ------------------------------------------------------------------------------

systemmap:MemberOfDomainShape
    a sh:NodeShape ;
    sh:targetSubjectsOf schema:memberOf ;
    sh:class schema:Organization ;
    sh:message "The subject of schema:memberOf must be a schema:Organization" .

systemmap:MemberOfRangeShape
    a sh:NodeShape ;
    sh:targetObjectsOf schema:memberOf ;
    sh:class schema:Organization ;
    sh:message "The object of schema:memberOf must be a schema:Organization" .

# ------------------------------------------------------------------------------
# 2.3. Domain and Range check for schema:parentOrganization
#    - Both the domain and range of the property schema:parentOrganization must 
#      equal to schema:Organization
# ------------------------------------------------------------------------------

systemmap:ParentOrganizationDomainShape
    a sh:NodeShape ;
    sh:targetSubjectsOf schema:parentOrganization ;
    sh:class schema:Organization ;
    sh:message "The subject of schema:parentOrganization must be a schema:Organization" .

systemmap:ParentOrganizationRangeShape
    a sh:NodeShape ;
    sh:targetObjectsOf schema:parentOrganization ;
    sh:class schema:Organization ;
    sh:message "The object of schema:parentOrganization must be a schema:Organization" .

# ------------------------------------------------------------------------------
# 2.4. Domain and Range check for schema:subOrganization
#    - Both the domain and range of the property schema:subOrganization must 
#      equal to schema:Organization
# ------------------------------------------------------------------------------

systemmap:SubOrganizationDomainShape
    a sh:NodeShape ;
    sh:targetSubjectsOf schema:subOrganization ;
    sh:class schema:Organization ;
    sh:message "The subject of schema:subOrganization must be a schema:Organization" .

systemmap:SubOrganizationRangeShape
    a sh:NodeShape ;
    sh:targetObjectsOf schema:subOrganization ;
    sh:class schema:Organization ;
    sh:message "The object of schema:subOrganization must be a schema:Organization" .

# ------------------------------------------------------------------------------
# 2.5. Domain and Range check for systemmap:access
#    - The domain of the property systemmap:access must be schema:Organization
#    - The range of the property systemmap:access must be dcat:Dataset
# ------------------------------------------------------------------------------

systemmap:AccessDomainShape
    a sh:NodeShape ;
    sh:targetSubjectsOf systemmap:access ;
    sh:class schema:Organization ;
    sh:message "The subject of systemmap:access must be a schema:Organization" .

# ------------------------------------------------------------------------------
# 2.6. Domain and Range check for systemmap:containedIn
#    - The domain of the property systemmap:containedIn must be dcat:Dataset
#    - The range of the property systemmap:containedIn must be schema:SoftwareApplication
# ------------------------------------------------------------------------------

systemmap:ContainedInDomainShape
    a sh:NodeShape ;
    sh:targetSubjectsOf systemmap:containedIn ;
    sh:class dcat:Dataset ;
    sh:message "The subject of systemmap:containedIn must be a dcat:Dataset" .

systemmap:ContainedInRangeShape
    a sh:NodeShape ;
    sh:targetObjectsOf systemmap:containedIn ;
    sh:class schema:SoftwareApplication ;
    sh:message "Objects of systemmap:containedIn must be a schema:SoftwareApplication" .

# ------------------------------------------------------------------------------
# 2.7. Domain and Range check for systemmap:contains
#    - The domain of the property systemmap:contains must be schema:SoftwareApplication
#    - The range of the property systemmap:contains must be dcat:Dataset
# ------------------------------------------------------------------------------

systemmap:ContainsDomainShape
    a sh:NodeShape ;
    sh:targetSubjectsOf systemmap:contains ;
    sh:class schema:SoftwareApplication ;
    sh:message "The subject of systemmap:contains must be a schema:SoftwareApplication" .

systemmap:ContainsRangeShape
    a sh:NodeShape ;
    sh:targetObjectsOf systemmap:contains ;
    sh:class dcat:Dataset ;
    sh:message "Objects of systemmap:contains must be a dcat:Dataset" .

# ------------------------------------------------------------------------------
# 2.8. Range check for systemmap:hasLegalBasis
#    - The range of the property systemmap:hasLegalBasis must be schema:Legislation
# ------------------------------------------------------------------------------

systemmap:HasLegalBasisRangeShape
    a sh:NodeShape ;
    sh:targetObjectsOf systemmap:hasLegalBasis ;
    sh:class schema:Legislation ;
    sh:message "Objects of systemmap:hasLegalBasis must be a schema:Legislation" .

# ------------------------------------------------------------------------------
# 2.9. Domain and Range check for systemmap:informedBy
#    - The domain of the property systemmap:informedBy must be dcat:Dataset
#    - The range of the property systemmap:informedBy must be dcat:Dataset
# ------------------------------------------------------------------------------

systemmap:InformedByDomainShape
    a sh:NodeShape ;
    sh:targetSubjectsOf systemmap:informedBy ;
    sh:class dcat:Dataset ;
    sh:message "The subject of systemmap:informedBy must be a dcat:Dataset" .

systemmap:InformedByRangeShape
    a sh:NodeShape ;
    sh:targetObjectsOf systemmap:informedBy ;
    sh:class dcat:Dataset ;
    sh:message "Objects of systemmap:informedBy must be a dcat:Dataset" .

# ------------------------------------------------------------------------------
# 2.10. Domain and Range check for systemmap:informs
#    - The domain of the property systemmap:informs must be dcat:Dataset
#    - The range of the property systemmap:informs must be dcat:Dataset
# ------------------------------------------------------------------------------

systemmap:InformsDomainShape
    a sh:NodeShape ;
    sh:targetSubjectsOf systemmap:informs ;
    sh:class dcat:Dataset ;
    sh:message "The subject of systemmap:informs must be a dcat:Dataset" .

systemmap:InformsRangeShape
    a sh:NodeShape ;
    sh:targetObjectsOf systemmap:informs ;
    sh:class dcat:Dataset ;
    sh:message "Objects of systemmap:informs must be a dcat:Dataset" .

# ------------------------------------------------------------------------------
# 2.11. Domain and Range check for systemmap:operatedBy
#    - The domain of the property systemmap:operatedBy must be schema:SoftwareApplication
#    - The range of the property systemmap:operatedBy must be schema:Organization
# ------------------------------------------------------------------------------

systemmap:OperatedByDomainShape
    a sh:NodeShape ;
    sh:targetSubjectsOf systemmap:operatedBy ;
    sh:class schema:SoftwareApplication ;
    sh:message "The subject of systemmap:operatedBy must be a schema:SoftwareApplication" .

systemmap:OperatedByRangeShape
    a sh:NodeShape ;
    sh:targetObjectsOf systemmap:operatedBy ;
    sh:class schema:Organization ;
    sh:message "Objects of systemmap:operatedBy must be a schema:Organization" .

# ------------------------------------------------------------------------------
# 2.12. Domain and Range check for systemmap:operates
#    - The domain of the property systemmap:operates must be schema:Organization
#    - The range of the property systemmap:operates must be schema:SoftwareApplication
# ------------------------------------------------------------------------------

systemmap:OperatesDomainShape
    a sh:NodeShape ;
    sh:targetSubjectsOf systemmap:operates ;
    sh:class schema:Organization ;
    sh:message "The subject of systemmap:operates must be a schema:Organization" .

systemmap:OperatesRangeShape
    a sh:NodeShape ;
    sh:targetObjectsOf systemmap:operates ;
    sh:class schema:SoftwareApplication ;
    sh:message "Objects of systemmap:operates must be a schema:SoftwareApplication" .

# ------------------------------------------------------------------------------
# 2.13. Domain and Range check for systemmap:ownedBy
#    - The domain of the property systemmap:ownedBy must be schema:Organization
#    - The range of the property systemmap:ownedBy must be schema:Organization
# ------------------------------------------------------------------------------

systemmap:OwnedByDomainShape
    a sh:NodeShape ;
    sh:targetSubjectsOf systemmap:ownedBy ;
    sh:class schema:Organization ;
    sh:message "The subject of systemmap:ownedBy must be a schema:Organization" .

systemmap:OwnedByRangeShape
    a sh:NodeShape ;
    sh:targetObjectsOf systemmap:ownedBy ;
    sh:class schema:Organization ;
    sh:message "Objects of systemmap:ownedBy must be a schema:Organization" .

# ------------------------------------------------------------------------------
# 2.14. Domain and Range check for systemmap:owns
#    - The domain of the property systemmap:owns must be schema:Organization
#    - The range of the property systemmap:owns must be schema:Organization
# ------------------------------------------------------------------------------

systemmap:OwnsDomainShape
    a sh:NodeShape ;
    sh:targetSubjectsOf systemmap:owns ;
    sh:class schema:Organization ;
    sh:message "The subject of systemmap:owns must be a schema:Organization" .

systemmap:OwnsRangeShape
    a sh:NodeShape ;
    sh:targetObjectsOf systemmap:owns ;
    sh:class schema:Organization ;
    sh:message "Objects of systemmap:owns must be a schema:Organization" .

# ------------------------------------------------------------------------------
# 2.15. Domain and Range check for systemmap:usesIdentifier
#    - The domain of the property systemmap:usesIdentifier must be dcat:Dataset
#    - The range of the property systemmap:usesIdentifier must be systemmap:Identifier
# ------------------------------------------------------------------------------

systemmap:UsesIdentifierDomainShape
    a sh:NodeShape ;
    sh:targetSubjectsOf systemmap:usesIdentifier ;
    sh:class dcat:Dataset ;
    sh:message "The subject of systemmap:usesIdentifier must be a dcat:Dataset" .

systemmap:UsesIdentifierRangeShape
    a sh:NodeShape ;
    sh:targetObjectsOf systemmap:usesIdentifier ;
    sh:class systemmap:Identifier ;
    sh:message "Objects of systemmap:usesIdentifier must be a systemmap:Identifier" .
